package com.CodeChef;
/*
Problem:Appy and Chef are participating in a contest. There are N problems in this contest; each problem has a unique problem code between 1 and N inclusive. Appy and Chef decided to split the problems to solve between them ? Appy should solve the problems whose problem codes are divisible by A but not divisible by B, and Chef should solve the problems whose problem codes are divisible by B but not divisible by A (they decided to not solve the problems whose codes are divisible by both A and B).

To win, it is necessary to solve at least K problems. You have to tell Appy whether they are going to win or lose.

Input
The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first and only line of each test case contains four space-separated integers N, A, B and K.
Output
For each test case, print a single line containing the string "Win" if they can solve at least K problems or "Lose" otherwise (without quotes).

*/
import java.util.ArrayList;
import java.util.Scanner;

public class AppyAndContest {

	public static void main(String[] args) {
		int T, N, A, B, K;
		ArrayList<String> input = new ArrayList<String>();
		String[] temp = new String[4];
		Scanner in = new Scanner(System.in);
		T = Integer.parseInt(in.nextLine());

		for (int i = 0; i < T; i++) {
			input.add(in.nextLine());
		}
		for (String i : input) {
			temp = i.split(" ");
			N = Integer.parseInt(temp[0]);
			A = Integer.parseInt(temp[1]);
			B = Integer.parseInt(temp[2]);
			K = Integer.parseInt(temp[3]);
			result(N, A, B, K);
			in.close();
		}
	}

	public static void result(int N, int A, int B, int K) {
		int count = 0;
		for (int i = 1; i <= N; i++) {
			if ((i % A == 0) && (i % B != 0)) {
				count = count + 1;
			}
			if ((i % B == 0) && (i % A != 0)) {
				count = count + 1;
			}
			if (count >= K) {
				System.out.println("Win");
				break;
			}
			if (i == N && count < K) {
				System.out.println("Lose");
			}

		}

	}

}
